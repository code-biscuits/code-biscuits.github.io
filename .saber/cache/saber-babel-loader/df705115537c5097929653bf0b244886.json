{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './polyfills';\nimport '#cache/runtime-polyfills';\nimport Vue from 'vue';\nimport Meta from 'vue-meta';\nimport layouts from '#cache/layouts';\nimport createRouter from './router';\nimport Layout from './components/LayoutManager.vue';\nimport ClientOnly from './components/ClientOnly';\nimport SaberLink from './components/SaberLink';\nimport extendBrowserApi from '#cache/extend-browser-api';\nimport { join, dirname } from './helpers/path';\nimport injectConfig from './helpers/inject-config';\nimport setTransition from './helpers/set-transition';\nimport scrollHandler from './helpers/scroll-handler';\nVue.config.productionTip = false;\nVue.component(ClientOnly.name, ClientOnly);\nVue.component(Layout.name, Layout);\nVue.component(SaberLink.name, SaberLink);\nVue.use(Meta, {\n  keyName: 'head',\n  attribute: 'data-saber-head',\n  ssrAttribute: 'data-saber-ssr',\n  tagIDKeyName: 'hid'\n});\nVue.mixin({\n  beforeCreate() {\n    this.$saber = this.$root;\n  }\n\n});\nexport default (context => {\n  const router = createRouter();\n  let customHead;\n  let customRootComponent;\n  const rootOptions = {\n    mixins: [],\n\n    head() {\n      const head = typeof customHead === 'function' ? customHead.call(this, this) : customHead || {};\n\n      const htmlAttrs = _objectSpread({\n        lang: this.$siteConfig.lang\n      }, head.htmlAttrs);\n\n      if (!htmlAttrs.lang) {\n        delete htmlAttrs.lang;\n      }\n\n      const {\n        title,\n        description\n      } = this.$siteConfig;\n      const defaultMeta = [{\n        name: 'generator',\n        content: `Saber v${__SABER_VERSION__}`\n      }];\n\n      if (description) {\n        defaultMeta.push({\n          name: 'description',\n          content: description,\n          hid: 'description'\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, head), {}, {\n        htmlAttrs,\n        title,\n        meta: [...defaultMeta, ...(head.meta || [])]\n      });\n    },\n\n    provide: {\n      layouts\n    },\n    layouts,\n    router,\n\n    data() {\n      return {\n        transition: null\n      };\n    },\n\n    mounted() {\n      scrollHandler(this.$router, this.$router.currentRoute, this.$router.currentRoute);\n    },\n\n    render(h) {\n      const transition = Object.assign({}, this.transition);\n      const listeners = {};\n      Object.keys(transition).forEach(key => {\n        if (typeof transition[key] === 'function') {\n          const kebabKey = key.replace(/([a-z])([A-Z])/, (_, p1, p2) => `${p1}-${p2.toLowerCase()}`);\n          listeners[kebabKey] = transition[key];\n          delete transition[key];\n        }\n      });\n      const beforeEnter = listeners['before-enter'];\n\n      listeners['before-enter'] = el => {\n        this.$nextTick(() => {\n          this.$emit('trigger-scroll');\n        });\n        beforeEnter && beforeEnter(el);\n      };\n\n      const children = [h('transition', {\n        props: transition,\n        on: listeners\n      }, [h('router-view')])];\n      return h('div', {\n        attrs: {\n          id: '_saber'\n        }\n      }, [customRootComponent ? h(customRootComponent, {}, children) : children]);\n    },\n\n    methods: {\n      setTransition(name) {\n        this.transition = name;\n      },\n\n      getPageLink(link) {\n        if (typeof link !== 'string' && process.env.NODE_ENV !== 'production') {\n          throw new TypeError(`Expect link to be a string`);\n        }\n\n        const matched = /^([^#?]+)([#?].*)?$/.exec(link);\n\n        if (!matched) {\n          return link;\n        }\n\n        const relativePath = join(dirname(this.$route.meta.__relative), matched[1]);\n        const extra = matched[2] || '';\n\n        for (const route of this.$router.options.routes) {\n          if (route.path === matched[1]) {\n            return link;\n          }\n\n          if (route.meta && route.meta.__relative && relativePath === route.meta.__relative) {\n            return `${route.path}${extra}`;\n          }\n        } // Not a page\n\n\n        return undefined;\n      }\n\n    }\n  };\n\n  const setHead = input => customHead = input;\n\n  const setRootComponent = input => customRootComponent = input;\n\n  const browserApiContext = {\n    Vue,\n    router,\n    rootOptions,\n    setHead,\n    setRootComponent\n  };\n  injectConfig(browserApiContext);\n  extendBrowserApi(browserApiContext); // Set transition after calling `extendBrowserApi`\n  // Because user might use `beforeEach` hook to add progress bar\n\n  setTransition(browserApiContext);\n  const app = new Vue(rootOptions);\n  return {\n    app,\n    router\n  };\n}); // Reloading browser when following files change\n\nif (module.hot) {\n  module.hot.accept(['#cache/layouts', '#cache/runtime-polyfills'], () => {\n    location.reload();\n  });\n}","map":{"version":3,"sources":["/Users/cmgriffing/code-biscuits.github.io/node_modules/saber/vue-app/create-app.js"],"names":["Vue","Meta","layouts","createRouter","Layout","ClientOnly","SaberLink","extendBrowserApi","join","dirname","injectConfig","setTransition","scrollHandler","config","productionTip","component","name","use","keyName","attribute","ssrAttribute","tagIDKeyName","mixin","beforeCreate","$saber","$root","context","router","customHead","customRootComponent","rootOptions","mixins","head","call","htmlAttrs","lang","$siteConfig","title","description","defaultMeta","content","__SABER_VERSION__","push","hid","meta","provide","data","transition","mounted","$router","currentRoute","render","h","Object","assign","listeners","keys","forEach","key","kebabKey","replace","_","p1","p2","toLowerCase","beforeEnter","el","$nextTick","$emit","children","props","on","attrs","id","methods","getPageLink","link","process","env","NODE_ENV","TypeError","matched","exec","relativePath","$route","__relative","extra","route","options","routes","path","undefined","setHead","input","setRootComponent","browserApiContext","app","module","hot","accept","location","reload"],"mappings":"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","sourcesContent":["import './polyfills'\nimport '#cache/runtime-polyfills'\nimport Vue from 'vue'\nimport Meta from 'vue-meta'\nimport layouts from '#cache/layouts'\nimport createRouter from './router'\nimport Layout from './components/LayoutManager.vue'\nimport ClientOnly from './components/ClientOnly'\nimport SaberLink from './components/SaberLink'\nimport extendBrowserApi from '#cache/extend-browser-api'\nimport { join, dirname } from './helpers/path'\nimport injectConfig from './helpers/inject-config'\nimport setTransition from './helpers/set-transition'\nimport scrollHandler from './helpers/scroll-handler'\n\nVue.config.productionTip = false\n\nVue.component(ClientOnly.name, ClientOnly)\nVue.component(Layout.name, Layout)\nVue.component(SaberLink.name, SaberLink)\n\nVue.use(Meta, {\n  keyName: 'head',\n  attribute: 'data-saber-head',\n  ssrAttribute: 'data-saber-ssr',\n  tagIDKeyName: 'hid'\n})\n\nVue.mixin({\n  beforeCreate() {\n    this.$saber = this.$root\n  }\n})\n\nexport default context => {\n  const router = createRouter()\n\n  let customHead\n  let customRootComponent\n\n  const rootOptions = {\n    mixins: [],\n    head() {\n      const head =\n        typeof customHead === 'function'\n          ? customHead.call(this, this)\n          : customHead || {}\n\n      const htmlAttrs = {\n        lang: this.$siteConfig.lang,\n        ...head.htmlAttrs\n      }\n\n      if (!htmlAttrs.lang) {\n        delete htmlAttrs.lang\n      }\n\n      const { title, description } = this.$siteConfig\n\n      const defaultMeta = [\n        {\n          name: 'generator',\n          content: `Saber v${__SABER_VERSION__}`\n        }\n      ]\n\n      if (description) {\n        defaultMeta.push({\n          name: 'description',\n          content: description,\n          hid: 'description'\n        })\n      }\n\n      return {\n        ...head,\n        htmlAttrs,\n        title,\n        meta: [\n          ...defaultMeta,\n          ...(head.meta || [])\n        ]\n      }\n    },\n    provide: {\n      layouts\n    },\n    layouts,\n    router,\n    data() {\n      return {\n        transition: null\n      }\n    },\n    mounted() {\n      scrollHandler(\n        this.$router,\n        this.$router.currentRoute,\n        this.$router.currentRoute\n      )\n    },\n    render(h) {\n      const transition = Object.assign({}, this.transition)\n      const listeners = {}\n      Object.keys(transition).forEach(key => {\n        if (typeof transition[key] === 'function') {\n          const kebabKey = key.replace(\n            /([a-z])([A-Z])/,\n            (_, p1, p2) => `${p1}-${p2.toLowerCase()}`\n          )\n          listeners[kebabKey] = transition[key]\n          delete transition[key]\n        }\n      })\n      const beforeEnter = listeners['before-enter']\n      listeners['before-enter'] = el => {\n        this.$nextTick(() => {\n          this.$emit('trigger-scroll')\n        })\n        beforeEnter && beforeEnter(el)\n      }\n\n      const children = [\n        h(\n          'transition',\n          {\n            props: transition,\n            on: listeners\n          },\n          [h('router-view')]\n        )\n      ]\n      return h('div', { attrs: { id: '_saber' } }, [\n        customRootComponent ? h(customRootComponent, {}, children) : children\n      ])\n    },\n    methods: {\n      setTransition(name) {\n        this.transition = name\n      },\n\n      getPageLink(link) {\n        if (typeof link !== 'string' && process.env.NODE_ENV !== 'production') {\n          throw new TypeError(`Expect link to be a string`)\n        }\n\n        const matched = /^([^#?]+)([#?].*)?$/.exec(link)\n\n        if (!matched) {\n          return link\n        }\n\n        const relativePath = join(\n          dirname(this.$route.meta.__relative),\n          matched[1]\n        )\n        const extra = matched[2] || ''\n        for (const route of this.$router.options.routes) {\n          if (route.path === matched[1]) {\n            return link\n          }\n\n          if (\n            route.meta &&\n            route.meta.__relative &&\n            relativePath === route.meta.__relative\n          ) {\n            return `${route.path}${extra}`\n          }\n        }\n\n        // Not a page\n        return undefined\n      }\n    }\n  }\n\n  const setHead = input => (customHead = input)\n  const setRootComponent = input => (customRootComponent = input)\n\n  const browserApiContext = {\n    Vue,\n    router,\n    rootOptions,\n    setHead,\n    setRootComponent\n  }\n\n  injectConfig(browserApiContext)\n  extendBrowserApi(browserApiContext)\n  // Set transition after calling `extendBrowserApi`\n  // Because user might use `beforeEach` hook to add progress bar\n  setTransition(browserApiContext)\n\n  const app = new Vue(rootOptions)\n\n  return {\n    app,\n    router\n  }\n}\n\n// Reloading browser when following files change\nif (module.hot) {\n  module.hot.accept(['#cache/layouts', '#cache/runtime-polyfills'], () => {\n    location.reload()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}