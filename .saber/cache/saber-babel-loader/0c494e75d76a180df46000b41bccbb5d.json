{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default {\n  name: 'LayoutManager',\n  functional: true,\n  inject: ['layouts'],\n\n  render(h, {\n    injections: {\n      layouts\n    },\n    parent,\n    scopedSlots\n  }) {\n    const page = parent.$page;\n    const {\n      layout,\n      isVueSFC\n    } = parent.$options;\n    const {\n      component: componentSlot,\n      default: defaultSlot\n    } = scopedSlots;\n    const attrs = {\n      props: {\n        page\n      }\n    };\n\n    const wrapSlot = slot => {\n      const {\n        markPageContent\n      } = parent.$ssrContext || {};\n\n      if (markPageContent) {\n        const result = h('div', null, [markPageContent[0]].concat(slot, markPageContent[1]));\n        return Array.isArray(slot) ? [result] : result;\n      }\n\n      return slot;\n    };\n\n    if (typeof layout !== 'string') {\n      return componentSlot ? wrapSlot(componentSlot(attrs.props)) : h('div', _objectSpread(_objectSpread({}, attrs), {}, {\n        class: '_saber-page'\n      }), wrapSlot(defaultSlot ? defaultSlot() : undefined));\n    }\n\n    const LayoutComponent = layouts[layout] || layouts.default;\n\n    if (!LayoutComponent) {\n      console.error(`Cannot find layout component \"${layout}\" in `, layouts);\n    }\n\n    return h(LayoutComponent, attrs, wrapSlot(componentSlot ? componentSlot(attrs.props) : defaultSlot ? defaultSlot() : undefined));\n  }\n\n};","map":{"version":3,"sources":["/Users/cmgriffing/code-biscuits.github.io/node_modules/saber/vue-app/components/LayoutManager.vue"],"names":["name","functional","inject","render","h","injections","layouts","parent","scopedSlots","page","$page","layout","isVueSFC","$options","component","componentSlot","default","defaultSlot","attrs","props","wrapSlot","slot","markPageContent","$ssrContext","result","concat","Array","isArray","class","undefined","LayoutComponent","console","error"],"mappings":";;;;;;AACA,eAAe;AACbA,EAAAA,IAAI,EAAE,eADO;AAEbC,EAAAA,UAAU,EAAE,IAFC;AAGbC,EAAAA,MAAM,EAAE,CAAC,SAAD,CAHK;;AAIbC,EAAAA,MAAM,CACJC,CADI,EAEJ;AACEC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF,KADd;AAEEC,IAAAA,MAFF;AAGEC,IAAAA;AAHF,GAFI,EAOJ;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACG,KAApB;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAuBL,MAAM,CAACM,QAApC;AACA,UAAM;AAAEC,MAAAA,SAAS,EAAEC,aAAb;AAA4BC,MAAAA,OAAO,EAAEC;AAArC,QAAqDT,WAA3D;AAEA,UAAMU,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAEV,QAAAA;AAAF;AAAT,KAAd;;AAEA,UAAMW,QAAQ,GAAGC,IAAI,IAAI;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAsBf,MAAM,CAACgB,WAAP,IAAsB,EAAlD;;AACA,UAAID,eAAJ,EAAqB;AACnB,cAAME,MAAM,GAAGpB,CAAC,CAAC,KAAD,EAAQ,IAAR,EAAc,CAACkB,eAAe,CAAC,CAAD,CAAhB,EAAqBG,MAArB,CAA4BJ,IAA5B,EAAkCC,eAAe,CAAC,CAAD,CAAjD,CAAd,CAAhB;AACA,eAAOI,KAAK,CAACC,OAAN,CAAcN,IAAd,IAAqB,CAACG,MAAD,CAArB,GAAgCA,MAAvC;AACD;;AACD,aAAOH,IAAP;AACD,KAPD;;AASA,QAAI,OAAOV,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,aAAOI,aAAa,GAChBK,QAAQ,CAACL,aAAa,CAACG,KAAK,CAACC,KAAP,CAAd,CADQ,GAEhBf,CAAC,CACC,KADD,kCAGMc,KAHN;AAIGU,QAAAA,KAAK,EAAE;AAJV,UAMCR,QAAQ,CAACH,WAAW,GAAGA,WAAW,EAAd,GAAmBY,SAA/B,CANT,CAFL;AAUD;;AAED,UAAMC,eAAe,GAAGxB,OAAO,CAACK,MAAD,CAAP,IAAmBL,OAAO,CAACU,OAAnD;;AAEA,QAAI,CAACc,eAAL,EAAsB;AACpBC,MAAAA,OAAO,CAACC,KAAR,CAAe,iCAAgCrB,MAAO,OAAtD,EAA8DL,OAA9D;AACD;;AAED,WAAOF,CAAC,CACN0B,eADM,EAENZ,KAFM,EAGNE,QAAQ,CACNL,aAAa,GACTA,aAAa,CAACG,KAAK,CAACC,KAAP,CADJ,GAETF,WAAW,GACXA,WAAW,EADA,GAEXY,SALE,CAHF,CAAR;AAWD;;AAzDY,CAAf","sourcesContent":["\nexport default {\n  name: 'LayoutManager',\n  functional: true,\n  inject: ['layouts'],\n  render(\n    h,\n    {\n      injections: { layouts },\n      parent,\n      scopedSlots\n    }\n  ) {\n    const page = parent.$page\n    const { layout, isVueSFC } = parent.$options\n    const { component: componentSlot, default: defaultSlot } = scopedSlots\n\n    const attrs = { props: { page } }\n\n    const wrapSlot = slot => {\n      const { markPageContent } = parent.$ssrContext || {}\n      if (markPageContent) {\n        const result = h('div', null, [markPageContent[0]].concat(slot, markPageContent[1]))\n        return Array.isArray(slot)? [result] : result\n      }\n      return slot\n    }\n\n    if (typeof layout !== 'string') {\n      return componentSlot\n        ? wrapSlot(componentSlot(attrs.props))\n        : h(\n            'div',\n            {\n              ...attrs,\n              class: '_saber-page'\n            },\n            wrapSlot(defaultSlot ? defaultSlot() : undefined)\n          )\n    }\n\n    const LayoutComponent = layouts[layout] || layouts.default\n\n    if (!LayoutComponent) {\n      console.error(`Cannot find layout component \"${layout}\" in `, layouts)\n    }\n\n    return h(\n      LayoutComponent,\n      attrs,\n      wrapSlot(\n        componentSlot\n          ? componentSlot(attrs.props)\n          : defaultSlot\n          ? defaultSlot()\n          : undefined\n      )\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}