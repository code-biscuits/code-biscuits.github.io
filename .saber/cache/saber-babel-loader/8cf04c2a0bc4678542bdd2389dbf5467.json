{"ast":null,"code":"import { siteConfig, themeConfig, locales } from 'saber/config';\nexport default (function (_ref) {\n  var Vue = _ref.Vue;\n  var store = Vue.observable({\n    siteConfig: siteConfig,\n    themeConfig: themeConfig,\n    locales: locales\n  });\n\n  var getMatchedConfig = function getMatchedConfig(localePath, key) {\n    var matchedLocale = store.locales[localePath];\n    return Object.assign({}, store[key], matchedLocale && matchedLocale[key]);\n  };\n\n  Vue.mixin({\n    computed: {\n      $localePath: function $localePath() {\n        var allLocalePaths = Object.keys(store.locales);\n        var localePath = '/';\n\n        for (var _i = 0, _allLocalePaths = allLocalePaths; _i < _allLocalePaths.length; _i++) {\n          var path = _allLocalePaths[_i];\n\n          if (path !== '/') {\n            if (this.$route.path === path || this.$route.path.indexOf(\"\".concat(path, \"/\")) === 0) {\n              localePath = path;\n            }\n          }\n        }\n\n        return localePath;\n      },\n      $locales: function $locales() {\n        return store.locales;\n      },\n      $siteConfig: function $siteConfig() {\n        return getMatchedConfig(this.$localePath, 'siteConfig');\n      },\n      $themeConfig: function $themeConfig() {\n        return getMatchedConfig(this.$localePath, 'themeConfig');\n      }\n    }\n  });\n\n  if (module.hot) {\n    module.hot.accept('saber/config', function () {\n      var config = require('saber/config');\n\n      store.siteConfig = config.siteConfig;\n      store.themeConfig = config.themeConfig;\n      store.locales = config.locales;\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}