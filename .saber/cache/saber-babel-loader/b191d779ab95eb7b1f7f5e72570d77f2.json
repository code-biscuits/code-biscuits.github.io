{"ast":null,"code":"import { siteConfig, themeConfig, locales } from 'saber/config';\nexport default (function (_ref) {\n  var Vue = _ref.Vue;\n  var store = Vue.observable({\n    siteConfig: siteConfig,\n    themeConfig: themeConfig,\n    locales: locales\n  });\n\n  var getMatchedConfig = function getMatchedConfig(localePath, key) {\n    var matchedLocale = store.locales[localePath];\n    return Object.assign({}, store[key], matchedLocale && matchedLocale[key]);\n  };\n\n  Vue.mixin({\n    computed: {\n      $localePath: function $localePath() {\n        var allLocalePaths = Object.keys(store.locales);\n        var localePath = '/';\n\n        for (var _i = 0, _allLocalePaths = allLocalePaths; _i < _allLocalePaths.length; _i++) {\n          var path = _allLocalePaths[_i];\n\n          if (path !== '/') {\n            if (this.$route.path === path || this.$route.path.indexOf(\"\".concat(path, \"/\")) === 0) {\n              localePath = path;\n            }\n          }\n        }\n\n        return localePath;\n      },\n      $locales: function $locales() {\n        return store.locales;\n      },\n      $siteConfig: function $siteConfig() {\n        return getMatchedConfig(this.$localePath, 'siteConfig');\n      },\n      $themeConfig: function $themeConfig() {\n        return getMatchedConfig(this.$localePath, 'themeConfig');\n      }\n    }\n  });\n\n  if (module.hot) {\n    module.hot.accept('saber/config', function () {\n      var config = require('saber/config');\n\n      store.siteConfig = config.siteConfig;\n      store.themeConfig = config.themeConfig;\n      store.locales = config.locales;\n    });\n  }\n});","map":{"version":3,"sources":["/Users/cmgriffing/code-biscuits.github.io/node_modules/saber/vue-app/helpers/inject-config.js"],"names":["siteConfig","themeConfig","locales","Vue","store","observable","getMatchedConfig","localePath","key","matchedLocale","Object","assign","mixin","computed","$localePath","allLocalePaths","keys","path","$route","indexOf","$locales","$siteConfig","$themeConfig","module","hot","accept","config","require"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,OAAlC,QAAiD,cAAjD;AAEA,gBAAe,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC1B,MAAMC,KAAK,GAAGD,GAAG,CAACE,UAAJ,CAAe;AAAEL,IAAAA,UAAU,EAAVA,UAAF;AAAcC,IAAAA,WAAW,EAAXA,WAAd;AAA2BC,IAAAA,OAAO,EAAPA;AAA3B,GAAf,CAAd;;AAEA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAaC,GAAb,EAAqB;AAC5C,QAAMC,aAAa,GAAGL,KAAK,CAACF,OAAN,CAAcK,UAAd,CAAtB;AACA,WAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,KAAK,CAACI,GAAD,CAAvB,EAA8BC,aAAa,IAAIA,aAAa,CAACD,GAAD,CAA5D,CAAP;AACD,GAHD;;AAKAL,EAAAA,GAAG,CAACS,KAAJ,CAAU;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,WADQ,yBACM;AACZ,YAAMC,cAAc,GAAGL,MAAM,CAACM,IAAP,CAAYZ,KAAK,CAACF,OAAlB,CAAvB;AACA,YAAIK,UAAU,GAAG,GAAjB;;AACA,2CAAmBQ,cAAnB,qCAAmC;AAA9B,cAAME,IAAI,sBAAV;;AACH,cAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB,gBACE,KAAKC,MAAL,CAAYD,IAAZ,KAAqBA,IAArB,IACA,KAAKC,MAAL,CAAYD,IAAZ,CAAiBE,OAAjB,WAA4BF,IAA5B,YAAyC,CAF3C,EAGE;AACAV,cAAAA,UAAU,GAAGU,IAAb;AACD;AACF;AACF;;AAED,eAAOV,UAAP;AACD,OAhBO;AAiBRa,MAAAA,QAjBQ,sBAiBG;AACT,eAAOhB,KAAK,CAACF,OAAb;AACD,OAnBO;AAoBRmB,MAAAA,WApBQ,yBAoBM;AACZ,eAAOf,gBAAgB,CAAC,KAAKQ,WAAN,EAAmB,YAAnB,CAAvB;AACD,OAtBO;AAuBRQ,MAAAA,YAvBQ,0BAuBO;AACb,eAAOhB,gBAAgB,CAAC,KAAKQ,WAAN,EAAmB,aAAnB,CAAvB;AACD;AAzBO;AADF,GAAV;;AA8BA,MAAIS,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,cAAlB,EAAkC,YAAM;AACtC,UAAMC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACAvB,MAAAA,KAAK,CAACJ,UAAN,GAAmB0B,MAAM,CAAC1B,UAA1B;AACAI,MAAAA,KAAK,CAACH,WAAN,GAAoByB,MAAM,CAACzB,WAA3B;AACAG,MAAAA,KAAK,CAACF,OAAN,GAAgBwB,MAAM,CAACxB,OAAvB;AACD,KALD;AAMD;AACF,CA9CD","sourcesContent":["import { siteConfig, themeConfig, locales } from 'saber/config'\n\nexport default ({ Vue }) => {\n  const store = Vue.observable({ siteConfig, themeConfig, locales })\n\n  const getMatchedConfig = (localePath, key) => {\n    const matchedLocale = store.locales[localePath]\n    return Object.assign({}, store[key], matchedLocale && matchedLocale[key])\n  }\n\n  Vue.mixin({\n    computed: {\n      $localePath() {\n        const allLocalePaths = Object.keys(store.locales)\n        let localePath = '/'\n        for (const path of allLocalePaths) {\n          if (path !== '/') {\n            if (\n              this.$route.path === path ||\n              this.$route.path.indexOf(`${path}/`) === 0\n            ) {\n              localePath = path\n            }\n          }\n        }\n\n        return localePath\n      },\n      $locales() {\n        return store.locales\n      },\n      $siteConfig() {\n        return getMatchedConfig(this.$localePath, 'siteConfig')\n      },\n      $themeConfig() {\n        return getMatchedConfig(this.$localePath, 'themeConfig')\n      }\n    }\n  })\n\n  if (module.hot) {\n    module.hot.accept('saber/config', () => {\n      const config = require('saber/config')\n      store.siteConfig = config.siteConfig\n      store.themeConfig = config.themeConfig\n      store.locales = config.locales\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}