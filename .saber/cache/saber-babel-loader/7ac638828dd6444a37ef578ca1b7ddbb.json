{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default {\n  name: 'LayoutManager',\n  functional: true,\n  inject: ['layouts'],\n  render: function render(h, _ref) {\n    var layouts = _ref.injections.layouts,\n        parent = _ref.parent,\n        scopedSlots = _ref.scopedSlots;\n    var page = parent.$page;\n    var _parent$$options = parent.$options,\n        layout = _parent$$options.layout,\n        isVueSFC = _parent$$options.isVueSFC;\n    var componentSlot = scopedSlots.component,\n        defaultSlot = scopedSlots[\"default\"];\n    var attrs = {\n      props: {\n        page: page\n      }\n    };\n\n    var wrapSlot = function wrapSlot(slot) {\n      var _ref2 = parent.$ssrContext || {},\n          markPageContent = _ref2.markPageContent;\n\n      if (markPageContent) {\n        var result = h('div', null, [markPageContent[0]].concat(slot, markPageContent[1]));\n        return Array.isArray(slot) ? [result] : result;\n      }\n\n      return slot;\n    };\n\n    if (typeof layout !== 'string') {\n      return componentSlot ? wrapSlot(componentSlot(attrs.props)) : h('div', _objectSpread(_objectSpread({}, attrs), {}, {\n        \"class\": '_saber-page'\n      }), wrapSlot(defaultSlot ? defaultSlot() : undefined));\n    }\n\n    var LayoutComponent = layouts[layout] || layouts[\"default\"];\n\n    if (!LayoutComponent) {\n      console.error(\"Cannot find layout component \\\"\".concat(layout, \"\\\" in \"), layouts);\n    }\n\n    return h(LayoutComponent, attrs, wrapSlot(componentSlot ? componentSlot(attrs.props) : defaultSlot ? defaultSlot() : undefined));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}